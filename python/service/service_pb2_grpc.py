# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import service.service_pb2 as service__pb2


class OAuthServiceStub(object):
    """An OAuth service that redirects RPC calls to their respective REST API an endpoint.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Authenticate = channel.unary_stream(
                '/oauthservice.OAuthService/Authenticate',
                request_serializer=service__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.AuthResponse.FromString,
                )
        self.Introspect = channel.unary_unary(
                '/oauthservice.OAuthService/Introspect',
                request_serializer=service__pb2.IntrospectRequest.SerializeToString,
                response_deserializer=service__pb2.IntrospectResponse.FromString,
                )
        self.UserInfo = channel.unary_unary(
                '/oauthservice.OAuthService/UserInfo',
                request_serializer=service__pb2.UserInfoRequest.SerializeToString,
                response_deserializer=service__pb2.UserInfoResponse.FromString,
                )
        self.Revoke = channel.unary_unary(
                '/oauthservice.OAuthService/Revoke',
                request_serializer=service__pb2.RevokeRequest.SerializeToString,
                response_deserializer=service__pb2.Empty.FromString,
                )


class OAuthServiceServicer(object):
    """An OAuth service that redirects RPC calls to their respective REST API an endpoint.
    """

    def Authenticate(self, request, context):
        """Attempts to retrieve tokens from an OAuth Identity Provider using the Device Code grant.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Introspect(self, request, context):
        """Introspects a token on the OAuth Identity Provider
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserInfo(self, request, context):
        """Gets info on the subject of the token returned by the OAuth Identity Provider
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Revoke(self, request, context):
        """Invalidates the token returned by the OAuth Identity Provider
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OAuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Authenticate': grpc.unary_stream_rpc_method_handler(
                    servicer.Authenticate,
                    request_deserializer=service__pb2.Empty.FromString,
                    response_serializer=service__pb2.AuthResponse.SerializeToString,
            ),
            'Introspect': grpc.unary_unary_rpc_method_handler(
                    servicer.Introspect,
                    request_deserializer=service__pb2.IntrospectRequest.FromString,
                    response_serializer=service__pb2.IntrospectResponse.SerializeToString,
            ),
            'UserInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.UserInfo,
                    request_deserializer=service__pb2.UserInfoRequest.FromString,
                    response_serializer=service__pb2.UserInfoResponse.SerializeToString,
            ),
            'Revoke': grpc.unary_unary_rpc_method_handler(
                    servicer.Revoke,
                    request_deserializer=service__pb2.RevokeRequest.FromString,
                    response_serializer=service__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'oauthservice.OAuthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OAuthService(object):
    """An OAuth service that redirects RPC calls to their respective REST API an endpoint.
    """

    @staticmethod
    def Authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/oauthservice.OAuthService/Authenticate',
            service__pb2.Empty.SerializeToString,
            service__pb2.AuthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Introspect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oauthservice.OAuthService/Introspect',
            service__pb2.IntrospectRequest.SerializeToString,
            service__pb2.IntrospectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oauthservice.OAuthService/UserInfo',
            service__pb2.UserInfoRequest.SerializeToString,
            service__pb2.UserInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Revoke(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oauthservice.OAuthService/Revoke',
            service__pb2.RevokeRequest.SerializeToString,
            service__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
